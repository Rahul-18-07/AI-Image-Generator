import React, { useState, useEffect } from "react";
import { Card, FormField, Loader, RenderCards } from "../components/index";

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchResult, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch("http://localhost:3000/api/v1/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },

        })
        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      }
      catch (error) {
        alert("error");
      }
      finally {
        setLoading(false);

      }

    }
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {

    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );

  }

  return (
    <section>
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[20px] max-w-[600px]">
          Browse Through a collection of imaginative and visually stunning
          images generated by AI.
        </p>
      </div>
      <div className="mt-16">
        <FormField
          labelName="Search Posts"
          type="text"
          name="text"
          placeholder="Search Posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center item-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing result for{" "}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}

            <div className=" grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 gid-cols-3 gap-3">
              {searchText ? (
                <RenderCards data={searchResult} title="No Searched Result Found" />
              ) : (
                <>
                  <RenderCards data={allPosts} title="No data now" />
                </>
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};
export default Home;
